package com.mapuni.gdydcaiji.database.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.mapuni.gdydcaiji.bean.TPoiInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TPOI_INFO".
*/
public class TPoiInfoDao extends AbstractDao<TPoiInfo, Long> {

    public static final String TABLENAME = "TPOI_INFO";

    /**
     * Properties of entity TPoiInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Bm = new Property(1, String.class, "bm", false, "BM");
        public final static Property Csbs = new Property(2, String.class, "csbs", false, "CSBS");
        public final static Property Qxbs = new Property(3, String.class, "qxbs", false, "QXBS");
        public final static Property Xzbs = new Property(4, String.class, "xzbs", false, "XZBS");
        public final static Property Gsjd = new Property(5, String.class, "gsjd", false, "GSJD");
        public final static Property Name = new Property(6, String.class, "name", false, "NAME");
        public final static Property Firstad = new Property(7, String.class, "firstad", false, "FIRSTAD");
        public final static Property Secondad = new Property(8, String.class, "secondad", false, "SECONDAD");
        public final static Property Thirdad = new Property(9, String.class, "thirdad", false, "THIRDAD");
        public final static Property Forthad = new Property(10, String.class, "forthad", false, "FORTHAD");
        public final static Property Fifad = new Property(11, String.class, "fifad", false, "FIFAD");
        public final static Property Sixad = new Property(12, String.class, "sixad", false, "SIXAD");
        public final static Property Sevenad = new Property(13, String.class, "sevenad", false, "SEVENAD");
        public final static Property Lydz = new Property(14, String.class, "lydz", false, "LYDZ");
        public final static Property Fl = new Property(15, String.class, "fl", false, "FL");
        public final static Property Mjdj = new Property(16, String.class, "mjdj", false, "MJDJ");
        public final static Property Sslc = new Property(17, String.class, "sslc", false, "SSLC");
        public final static Property Sslymc = new Property(18, String.class, "sslymc", false, "SSLYMC");
        public final static Property X = new Property(19, Double.class, "x", false, "X");
        public final static Property Y = new Property(20, Double.class, "y", false, "Y");
        public final static Property Gxsj = new Property(21, java.util.Date.class, "gxsj", false, "GXSJ");
        public final static Property Bz = new Property(22, String.class, "bz", false, "BZ");
        public final static Property Optuser = new Property(23, String.class, "optuser", false, "OPTUSER");
        public final static Property Lat = new Property(24, Double.class, "lat", false, "LAT");
        public final static Property Lng = new Property(25, Double.class, "lng", false, "LNG");
        public final static Property Opttime = new Property(26, java.util.Date.class, "opttime", false, "OPTTIME");
        public final static Property Img = new Property(27, String.class, "img", false, "IMG");
    }


    public TPoiInfoDao(DaoConfig config) {
        super(config);
    }
    
    public TPoiInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TPOI_INFO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"BM\" TEXT," + // 1: bm
                "\"CSBS\" TEXT," + // 2: csbs
                "\"QXBS\" TEXT," + // 3: qxbs
                "\"XZBS\" TEXT," + // 4: xzbs
                "\"GSJD\" TEXT," + // 5: gsjd
                "\"NAME\" TEXT," + // 6: name
                "\"FIRSTAD\" TEXT," + // 7: firstad
                "\"SECONDAD\" TEXT," + // 8: secondad
                "\"THIRDAD\" TEXT," + // 9: thirdad
                "\"FORTHAD\" TEXT," + // 10: forthad
                "\"FIFAD\" TEXT," + // 11: fifad
                "\"SIXAD\" TEXT," + // 12: sixad
                "\"SEVENAD\" TEXT," + // 13: sevenad
                "\"LYDZ\" TEXT," + // 14: lydz
                "\"FL\" TEXT," + // 15: fl
                "\"MJDJ\" TEXT," + // 16: mjdj
                "\"SSLC\" TEXT," + // 17: sslc
                "\"SSLYMC\" TEXT," + // 18: sslymc
                "\"X\" REAL," + // 19: x
                "\"Y\" REAL," + // 20: y
                "\"GXSJ\" INTEGER," + // 21: gxsj
                "\"BZ\" TEXT," + // 22: bz
                "\"OPTUSER\" TEXT," + // 23: optuser
                "\"LAT\" REAL," + // 24: lat
                "\"LNG\" REAL," + // 25: lng
                "\"OPTTIME\" INTEGER," + // 26: opttime
                "\"IMG\" TEXT);"); // 27: img
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TPOI_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TPoiInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String bm = entity.getBm();
        if (bm != null) {
            stmt.bindString(2, bm);
        }
 
        String csbs = entity.getCsbs();
        if (csbs != null) {
            stmt.bindString(3, csbs);
        }
 
        String qxbs = entity.getQxbs();
        if (qxbs != null) {
            stmt.bindString(4, qxbs);
        }
 
        String xzbs = entity.getXzbs();
        if (xzbs != null) {
            stmt.bindString(5, xzbs);
        }
 
        String gsjd = entity.getGsjd();
        if (gsjd != null) {
            stmt.bindString(6, gsjd);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String firstad = entity.getFirstad();
        if (firstad != null) {
            stmt.bindString(8, firstad);
        }
 
        String secondad = entity.getSecondad();
        if (secondad != null) {
            stmt.bindString(9, secondad);
        }
 
        String thirdad = entity.getThirdad();
        if (thirdad != null) {
            stmt.bindString(10, thirdad);
        }
 
        String forthad = entity.getForthad();
        if (forthad != null) {
            stmt.bindString(11, forthad);
        }
 
        String fifad = entity.getFifad();
        if (fifad != null) {
            stmt.bindString(12, fifad);
        }
 
        String sixad = entity.getSixad();
        if (sixad != null) {
            stmt.bindString(13, sixad);
        }
 
        String sevenad = entity.getSevenad();
        if (sevenad != null) {
            stmt.bindString(14, sevenad);
        }
 
        String lydz = entity.getLydz();
        if (lydz != null) {
            stmt.bindString(15, lydz);
        }
 
        String fl = entity.getFl();
        if (fl != null) {
            stmt.bindString(16, fl);
        }
 
        String mjdj = entity.getMjdj();
        if (mjdj != null) {
            stmt.bindString(17, mjdj);
        }
 
        String sslc = entity.getSslc();
        if (sslc != null) {
            stmt.bindString(18, sslc);
        }
 
        String sslymc = entity.getSslymc();
        if (sslymc != null) {
            stmt.bindString(19, sslymc);
        }
 
        Double x = entity.getX();
        if (x != null) {
            stmt.bindDouble(20, x);
        }
 
        Double y = entity.getY();
        if (y != null) {
            stmt.bindDouble(21, y);
        }
 
        java.util.Date gxsj = entity.getGxsj();
        if (gxsj != null) {
            stmt.bindLong(22, gxsj.getTime());
        }
 
        String bz = entity.getBz();
        if (bz != null) {
            stmt.bindString(23, bz);
        }
 
        String optuser = entity.getOptuser();
        if (optuser != null) {
            stmt.bindString(24, optuser);
        }
 
        Double lat = entity.getLat();
        if (lat != null) {
            stmt.bindDouble(25, lat);
        }
 
        Double lng = entity.getLng();
        if (lng != null) {
            stmt.bindDouble(26, lng);
        }
 
        java.util.Date opttime = entity.getOpttime();
        if (opttime != null) {
            stmt.bindLong(27, opttime.getTime());
        }
 
        String img = entity.getImg();
        if (img != null) {
            stmt.bindString(28, img);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TPoiInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String bm = entity.getBm();
        if (bm != null) {
            stmt.bindString(2, bm);
        }
 
        String csbs = entity.getCsbs();
        if (csbs != null) {
            stmt.bindString(3, csbs);
        }
 
        String qxbs = entity.getQxbs();
        if (qxbs != null) {
            stmt.bindString(4, qxbs);
        }
 
        String xzbs = entity.getXzbs();
        if (xzbs != null) {
            stmt.bindString(5, xzbs);
        }
 
        String gsjd = entity.getGsjd();
        if (gsjd != null) {
            stmt.bindString(6, gsjd);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String firstad = entity.getFirstad();
        if (firstad != null) {
            stmt.bindString(8, firstad);
        }
 
        String secondad = entity.getSecondad();
        if (secondad != null) {
            stmt.bindString(9, secondad);
        }
 
        String thirdad = entity.getThirdad();
        if (thirdad != null) {
            stmt.bindString(10, thirdad);
        }
 
        String forthad = entity.getForthad();
        if (forthad != null) {
            stmt.bindString(11, forthad);
        }
 
        String fifad = entity.getFifad();
        if (fifad != null) {
            stmt.bindString(12, fifad);
        }
 
        String sixad = entity.getSixad();
        if (sixad != null) {
            stmt.bindString(13, sixad);
        }
 
        String sevenad = entity.getSevenad();
        if (sevenad != null) {
            stmt.bindString(14, sevenad);
        }
 
        String lydz = entity.getLydz();
        if (lydz != null) {
            stmt.bindString(15, lydz);
        }
 
        String fl = entity.getFl();
        if (fl != null) {
            stmt.bindString(16, fl);
        }
 
        String mjdj = entity.getMjdj();
        if (mjdj != null) {
            stmt.bindString(17, mjdj);
        }
 
        String sslc = entity.getSslc();
        if (sslc != null) {
            stmt.bindString(18, sslc);
        }
 
        String sslymc = entity.getSslymc();
        if (sslymc != null) {
            stmt.bindString(19, sslymc);
        }
 
        Double x = entity.getX();
        if (x != null) {
            stmt.bindDouble(20, x);
        }
 
        Double y = entity.getY();
        if (y != null) {
            stmt.bindDouble(21, y);
        }
 
        java.util.Date gxsj = entity.getGxsj();
        if (gxsj != null) {
            stmt.bindLong(22, gxsj.getTime());
        }
 
        String bz = entity.getBz();
        if (bz != null) {
            stmt.bindString(23, bz);
        }
 
        String optuser = entity.getOptuser();
        if (optuser != null) {
            stmt.bindString(24, optuser);
        }
 
        Double lat = entity.getLat();
        if (lat != null) {
            stmt.bindDouble(25, lat);
        }
 
        Double lng = entity.getLng();
        if (lng != null) {
            stmt.bindDouble(26, lng);
        }
 
        java.util.Date opttime = entity.getOpttime();
        if (opttime != null) {
            stmt.bindLong(27, opttime.getTime());
        }
 
        String img = entity.getImg();
        if (img != null) {
            stmt.bindString(28, img);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TPoiInfo readEntity(Cursor cursor, int offset) {
        TPoiInfo entity = new TPoiInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // bm
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // csbs
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // qxbs
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // xzbs
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // gsjd
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // name
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // firstad
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // secondad
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // thirdad
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // forthad
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // fifad
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // sixad
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // sevenad
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // lydz
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // fl
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // mjdj
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // sslc
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // sslymc
            cursor.isNull(offset + 19) ? null : cursor.getDouble(offset + 19), // x
            cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20), // y
            cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)), // gxsj
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // bz
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // optuser
            cursor.isNull(offset + 24) ? null : cursor.getDouble(offset + 24), // lat
            cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25), // lng
            cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)), // opttime
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27) // img
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TPoiInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setBm(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCsbs(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setQxbs(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setXzbs(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGsjd(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFirstad(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSecondad(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setThirdad(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setForthad(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFifad(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setSixad(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSevenad(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setLydz(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFl(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setMjdj(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setSslc(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setSslymc(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setX(cursor.isNull(offset + 19) ? null : cursor.getDouble(offset + 19));
        entity.setY(cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20));
        entity.setGxsj(cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)));
        entity.setBz(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setOptuser(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setLat(cursor.isNull(offset + 24) ? null : cursor.getDouble(offset + 24));
        entity.setLng(cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25));
        entity.setOpttime(cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)));
        entity.setImg(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TPoiInfo entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TPoiInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TPoiInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
